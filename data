import pandas as pd
import numpy as np
# Step 1: Generate a better dataset with correlations
np.random.seed(42)
n_samples = 1000

data = {
    'CustomerID': [f'CUST{i:05d}' for i in range(1, n_samples + 1)],
    'Age': np.random.randint(18, 80, n_samples),
    'Tenure_Months': np.random.randint(1, 60, n_samples),
    'Monthly_Charges': np.round(np.random.uniform(20, 150, n_samples), 2),
    'Total_Charges': np.zeros(n_samples),  # Placeholder, will calculate later
    'Contract_Type': [choice(['Month-to-month', 'One year', 'Two year']) for _ in range(n_samples)],
    'Payment_Method': [choice(['Electronic check', 'Mailed check', 'Bank transfer', 'Credit card']) 
                      for _ in range(n_samples)],
    'Tech_Support': [choice(['Yes', 'No']) for _ in range(n_samples)],
    'Internet_Service': [choice(['DSL', 'Fiber optic', 'No']) for _ in range(n_samples)],
    'Churn': ['Yes'] * 500 + ['No'] * 500  # Balanced classes
}

df = pd.DataFrame(data)
df = df.sample(frac=1, random_state=42).reset_index(drop=True)

# Introduce correlations: Churn more likely with short tenure, high charges, no tech support
df.loc[df['Churn'] == 'Yes', 'Tenure_Months'] = np.random.randint(1, 20, size=len(df[df['Churn'] == 'Yes']))
df.loc[df['Churn'] == 'No', 'Tenure_Months'] = np.random.randint(20, 60, size=len(df[df['Churn'] == 'No']))
df.loc[df['Churn'] == 'Yes', 'Monthly_Charges'] = np.round(np.random.uniform(80, 150, size=len(df[df['Churn'] == 'Yes'])), 2)
df.loc[df['Churn'] == 'No', 'Monthly_Charges'] = np.round(np.random.uniform(20, 100, size=len(df[df['Churn'] == 'No'])), 2)
df.loc[df['Churn'] == 'Yes', 'Tech_Support'] = np.random.choice(['No', 'Yes'], p=[0.8, 0.2], size=len(df[df['Churn'] == 'Yes']))
df.loc[df['Churn'] == 'No', 'Tech_Support'] = np.random.choice(['No', 'Yes'], p=[0.3, 0.7], size=len(df[df['Churn'] == 'No']))
df['Total_Charges'] = df['Tenure_Months'] * df['Monthly_Charges'] * np.random.uniform(0.9, 1.1, n_samples)

# Save updated dataset
df.to_csv('customer_churn_dataset_improved.csv', index=False)
